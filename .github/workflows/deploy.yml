# GitHub Actions CI/CD Pipeline
# Bu dosya, otomatik dağıtım sürecini tanımlar

name: Deploy

# Tetikleyiciler
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# İşler
jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Build the Docker image first
      - name: Build Docker image
        run: |
          docker build -t nginx-docker-cicd:test .
          docker images

      # Run Snyk test with modified severity threshold
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: nginx-docker-cicd:test
          args: --severity-threshold=high --fail-on=upgradable
        continue-on-error: true

      # If scan passes, push to Docker Hub
      - name: Login to Docker Hub
        if: success()
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Tag and push image
        if: success()
        run: |
          docker tag nginx-docker-cicd:test ${{ secrets.DOCKERHUB_USERNAME }}/nginx-docker-cicd:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nginx-docker-cicd:latest

  deploy-pages:
    needs: build-and-scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './src/app'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 